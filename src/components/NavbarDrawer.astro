---
import BurgerMenu from "./BurgerMenu.astro";
import ThemeToggler from "./navigation/ThemeToggler.astro";

import { getCollection } from "astro:content";

const yearOnMain = "2023";

const allWebTech = await getCollection("web-tech");

const lastWebtech = allWebTech
    .filter((material) => material.id.startsWith(yearOnMain))
    .sort((a, b) => a.data.number - b.data.number);

const clinetMaterials = await getCollection("web-client-dev");

const lastClinetMaterials = clinetMaterials
    .filter((material) => material.id.startsWith(yearOnMain))
    .sort((a, b) => a.data.number - b.data.number);

const clinetMaterialsTs = await getCollection("web-client-dev-ts");

const lastClinetMaterialsTs = clinetMaterialsTs
    .filter((material) => material.id.startsWith(yearOnMain))
    .sort((a, b) => a.data.number - b.data.number);

const courses = [
    {
        title: "Основы веб-технологий",
        href: `/web-course-site/labs/web-tech`,
        materials: lastWebtech,
    },
    {
        title: "Основы веб-разработки",
        href: `/web-course-site/labs/web-client-dev`,
        materials: lastClinetMaterials,
    },
    {
        title: "Веб-разработка на клиенте",
        href: `/web-course-site/labs/web-client-dev-ts`,
        materials: lastClinetMaterialsTs,
    },
];

const links = [
    {
        title: "Главная",
        href: `/web-course-site/`,
        icon: "./src/assets/img/house.svg",
    },
    {
        title: "Курсы",
        href: `#courses`,
        icon: "./src/assets/img/book.svg",
    },
    {
        title: "База знаний",
        href: `#useful`,
        icon: "./src/assets/img/database.svg",
    },
];
let isDropdownOpen = false;

// isDropdownOpen.onToggled(() => {});
---

<header class="drawer-container w-full fixed z-50 p-2.5">
    <div
        class="drawer bg-bg-menu text-text-primary flex-col gap-2 px-10 py-3.75 rounded-2xl box-border backdrop-blur-xl"
    >
        <div
            class="drawer-content-vertical w-full justify-between items-center mx-auto max-w-screen-xl flex"
        >
            <a class="userActionsLink" href="web-course-site/">
                <img
                    class="w-10 h-10 hidden sm:block"
                    src="/src/assets/img/logo.svg"
                    alt="logo"
                />
            </a>
            <nav class="drawer-nav gap-10 hidden sm:flex">
                {
                    links.map((link) => (
                        <a
                            class="header__link userActionsLink"
                            href={link.href}
                        >
                            {link.title}
                        </a>
                    ))
                }
            </nav>
            <BurgerMenu links={links} />
            <ThemeToggler />
        </div>
        {
            isDropdownOpen ? (
                <ul class="dropdown__list flex justify-center gap-3">
                    {courses.map((course) => (
                        <li class="dropdown__item">
                            <a
                                class="dropdown__link text-sm"
                                href={course.href}
                            >
                                {course.title}
                            </a>
                        </li>
                    ))}
                </ul>
            ) : null
        }
        <!-- <div class="drawer-side flex-none"></div> -->
    </div>
</header>
