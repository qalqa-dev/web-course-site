---
import BurgerMenu from "./BurgerMenu.astro";
import ThemeToggler from "./navigation/ThemeToggler.astro";

import { getCollection } from "astro:content";

const yearOnMain = "2023";

const allWebTech = await getCollection("web-tech");

const lastWebtech = allWebTech
    .filter((material) => material.id.startsWith(yearOnMain))
    .sort((a, b) => a.data.number - b.data.number);

const clinetMaterials = await getCollection("web-client-dev");

const lastClinetMaterials = clinetMaterials
    .filter((material) => material.id.startsWith(yearOnMain))
    .sort((a, b) => a.data.number - b.data.number);

const clinetMaterialsTs = await getCollection("web-client-dev-ts");

const lastClinetMaterialsTs = clinetMaterialsTs
    .filter((material) => material.id.startsWith(yearOnMain))
    .sort((a, b) => a.data.number - b.data.number);

const courses = [
    {
        title: "Основы веб-технологий",
        href: `/web-course-site/labs/web-tech`,
        materials: lastWebtech,
    },
    {
        title: "Основы веб-разработки",
        href: `/web-course-site/labs/web-client-dev`,
        materials: lastClinetMaterials,
    },
    {
        title: "Веб-разработка на клиенте",
        href: `/web-course-site/labs/web-client-dev-ts`,
        materials: lastClinetMaterialsTs,
    },
];

const links = [
    {
        title: "Главная",
        href: `/web-course-site`,
        icon: "./src/assets/img/house.svg",
    },
    {
        title: "Курсы",
        href: `#courses`,
        icon: "./src/assets/img/book.svg",
    },
    {
        title: "База знаний",
        href: `#useful`,
        icon: "./src/assets/img/database.svg",
    },
];

// isDropdownOpen.onToggled(() => {});
---

<header class="drawer-container w-full fixed z-50 p-2.5">
    <div
        class="drawer bg-bg-menu text-text-primary flex-col gap-2 px-10 py-3.75 rounded-2xl box-border backdrop-blur-xl"
    >
        <div
            class="drawer-content-vertical w-full justify-between items-center mx-auto max-w-screen-xl flex"
        >
            <a class="userActionsLink hidden md:block" href="/web-course-site/">
                <img
                    class="w-10 h-10"
                    src="/src/assets/img/logo.svg"
                    alt="logo"
                />
            </a>
            <nav class="drawer-nav gap-10 hidden md:flex">
                {
                    links.map((link) => (
                        <a
                            class="header__link cursor-pointer userActionsLink"
                            id={link.href.slice(1) + "-link"}
                        >
                            {link.title}
                        </a>
                    ))
                }
            </nav>
            <BurgerMenu links={links} />
            <ThemeToggler />
        </div>
        {
            (
                <ul class="dropdown__list hidden md:flex justify-center gap-0 lg:gap-3">
                    {courses.map((course) => (
                        <li class="dropdown__item">
                            <a
                                class="dropdown__link text-sm md:text-base lg:text-xl p-3 lg:p-5 userActionsLink"
                                href={course.href}
                            >
                                {course.title}
                            </a>
                        </li>
                    ))}
                </ul>
            )
        }
        <!-- <div class="drawer-side flex-none"></div> -->
    </div>
</header>

<script>
    let isDropdownOpen = false;

    const dropdown = document.querySelector(".dropdown__list");
    const coursesLink = document.querySelector("#courses-link");
    const mainLink = document.querySelector("#web-course-site-link");
    const usefulLink = document.querySelector("#useful-link");

    const toggleDropdown = () => {
        isDropdownOpen = !isDropdownOpen;
        dropdown?.classList.toggle("open", isDropdownOpen);
        coursesLink?.classList.toggle("open", isDropdownOpen);
    };

    const goToLink = (link) => {
        const slicedLink =
            link.id === "web-course-site-link"
                ? link.id.slice(0, -5)
                : "web-course-site/" + link.id.slice(0, -5);
        window.location.href = `/${slicedLink}/`;
    };

    mainLink?.addEventListener("click", () => goToLink(mainLink));
    coursesLink?.addEventListener("click", toggleDropdown);
    usefulLink?.addEventListener("click", () => goToLink(usefulLink));
</script>

<style>
    #courses-link {
        position: relative;
        padding-right: 40px;
    }

    #courses-link::after {
        transition: all 0.3s ease-in-out;
        content: "";
        position: absolute;
        top: 25px;
        right: 15px;
        width: 21px;
        height: 20px;
        background: url("/src/assets/img/cheveron-down.svg") center no-repeat;
    }

    .dropdown__list {
        transition: all 0.3s ease-in-out;
        max-height: 0px;
        width: 100%;
        padding: 0;
        pointer-events: none;
        opacity: 0;
    }

    .dropdown__list.open {
        pointer-events: all;
        max-height: 100px;
        width: 100%;
        opacity: 1;
        padding: 15px 0;
    }

    #courses-link.open::after {
        transform: rotate(180deg);
    }
</style>
