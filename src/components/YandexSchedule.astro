---
const { token } = Astro.props;
---

<div class="consultations" data-token={token}></div>

<template id="event-template">
  <li>
    <div>
      <span class="font-medium title"></span>
    </div>
    <div>
      <span class="date"></span>
      <span class="start-time"></span>-<span class="end-time"></span>
    </div>
  </li>
</template>

<script>
  function getDateAndTimeYaCalendar(text) {
    const arr = text.split(" ");
    const time = arr.pop();
    const date = arr.join(" ");
    return {
      date,
      time,
    };
  }

  async function getData(url) {
    try {
      const res = await fetch(url);
      if (!res.ok) {
        return null;
      }
      const data = await res.text();
      return data;
    } catch {
      return null;
    }
  }

  function appendError(parrent, errorMessage) {
    const message = document.createElement("p");
    message.innerText = errorMessage;
    parrent.appendChild(message);
  }

  const parser = new DOMParser();

  document.addEventListener("DOMContentLoaded", async () => {
    const consultationsList = document.querySelectorAll(".consultations");

    consultationsList.forEach(async (consultationElement) => {
      const token = consultationElement.dataset.token;

      const URL = `https://slavaver.space/api/consultation?private_token=${token}`;

      const eventsHTML = await getData(URL);

      if (!eventsHTML) {
        appendError(
          consultationElement,
          "Ошибка загрузки расписания. Попробуйте перезагрузить страницу."
        );
        return;
      }

      const eventList = document.createElement("ol");

      const dom = parser.parseFromString(eventsHTML, "text/html");
      const template = document.querySelector("#event-template");

      const listOfEvents = [
        ...dom.querySelectorAll("div.b-content-event"),
      ].slice(0, 5);

      listOfEvents.forEach((eventElement) => {
        const clone = template.content.cloneNode(true);

        clone.querySelector(".title").innerText =
          eventElement.querySelector("h1").innerText;

        const startTimeValue = eventElement.querySelector(
          ".e-time span:nth-child(1)"
        ).innerText;
        const { date, time: startTime } =
          getDateAndTimeYaCalendar(startTimeValue);
        clone.querySelector(".date").innerText = date;
        clone.querySelector(".start-time").innerText = startTime;

        const endTimeValue = eventElement.querySelector(
          ".e-time span:nth-child(2)"
        ).innerText;
        const { time: endTime } = getDateAndTimeYaCalendar(endTimeValue);
        clone.querySelector(".end-time").innerText = endTime;

        const linkTelemost =
          eventElement.querySelector(".e-description a")?.innerText;

        if (linkTelemost) {
          const link = document.createElement("a");

          link.classList.add("break-all");
          link.classList.add("font-normal");
          link.href = linkTelemost;
          link.innerText = linkTelemost;
          clone.firstElementChild.appendChild(link);
        }

        eventList.appendChild(clone);
      });

      consultationElement.append(eventList);
    });
  });
</script>
